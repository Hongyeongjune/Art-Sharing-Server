plugins {
	id 'org.springframework.boot' version '2.1.7.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
}

group = 'kr.ac.skuniv'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url "https://dl.bintray.com/mockito/maven" }
}

test {
	useJUnitPlatform()
}

def queryDSLVersion = '4.2.1'
def generated = "src/main/generated"

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	compile 'io.springfox:springfox-swagger2:2.6.1'
	compile 'io.springfox:springfox-swagger-ui:2.6.1'
	compile 'org.springframework.boot:spring-boot-starter-security'
	compile 'io.jsonwebtoken:jjwt:0.9.0' //jwtProvider 사용하기 위해
	compile 'org.springframework.boot:spring-boot-starter-aop' //spring AOP 사용하기 위해
	compile("com.querydsl:querydsl-core:${queryDSLVersion}")
	compile("com.querydsl:querydsl-jpa:${queryDSLVersion}")
	compile("com.querydsl:querydsl-apt:${queryDSLVersion}")
	annotationProcessor(
			"com.querydsl:querydsl-apt:${queryDSLVersion}:jpa",
			"org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final",
			"javax.annotation:javax.annotation-api:1.3.2",
			"org.projectlombok:lombok"
	)
	compile 'com.fasterxml.jackson.core:jackson-databind:2.9.4'
	compile 'commons-io:commons-io:2.6'
	compile group: 'org.yaml', name: 'snakeyaml', version: '1.23'
	testImplementation 'org.mockito:mockito-junit-jupiter:2.17.2'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.1.0'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.1.0'
	testCompileOnly 'junit:junit:4.12'
	testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.1.0'
	testImplementation 'org.jeasy:easy-random-core:4.1.0'
	compile 'software.amazon.awssdk:s3:2.10.79'
	implementation 'com.amazonaws:aws-java-sdk:1.11.718'
	implementation 'org.apache.commons:commons-lang3:3.9'
	implementation 'commons-io:commons-io:2.6'
}


sourceSets {
	main.java.srcDirs += [generated]
}

tasks.withType(JavaCompile){
	options.annotationProcessorGeneratedSourcesDirectory = file(generated)
}

clean.doLast {
	file(generated).deleteDir()
}

task generateQueryDSL(type: JavaCompile, group: 'build') {
	source = sourceSets.main.java
	classpath = configurations.compile
	options.compilerArgs = [
			"-proc:only",
			"-processor", "com.querydsl.apt.jpa.JPAAnnotationProcessor"
	]
	destinationDir = file('./src/main/generated')
}

